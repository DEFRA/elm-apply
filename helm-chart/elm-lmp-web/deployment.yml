apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        environment: {{ .Values.environment }}
      annotations:
        redeployOnChange: "{{ .Values.container.redeployOnChange }}"
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret}}
      containers:
        - name: {{ .Values.name }}
          # image:  {{ .Values.container.registry }}/{{ .Values.container.image }}:{{ .Values.container.tag }}
          image: {{ .Values.image }}
        {{- if .Values.container.command }}
        {{- with .Values.container.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.container.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
          imagePullPolicy: {{ .Values.container.imagePullPolicy }}
          env:
          - name: PORT
            value: "3000"
          securityContext:
            runAsUser: {{ .Values.container.runAsUser }}
            runAsNonRoot: {{ .Values.container.runAsNonRoot }}
            readOnlyRootFilesystem: {{ .Values.container.readOnlyRootFilesystem }}
            allowPrivilegeEscalation: {{ .Values.container.allowPrivilegeEscalation }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
                memory: {{ .Values.container.requestMemory | quote }}
                cpu: {{ .Values.container.requestCpu | quote }}
            limits:
                memory: {{ .Values.container.limitMemory | quote }}
                cpu: {{ .Values.container.limitCpu | quote }}
